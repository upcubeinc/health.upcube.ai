services:
  sparkyfitness-db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: ${SPARKY_FITNESS_DB_NAME}
      POSTGRES_USER: ${SPARKY_FITNESS_DB_USER}
      POSTGRES_PASSWORD: ${SPARKY_FITNESS_DB_PASSWORD}
    volumes:
      - ../postgresql:/var/lib/postgresql/data
    networks:
      - sparkyfitness-network # Use the new named network

  sparkyfitness-server:
    image: codewithcj/sparkyfitness_server:latest # Use pre-built image
    environment:
      SPARKY_FITNESS_LOG_LEVEL: ${SPARKY_FITNESS_LOG_LEVEL}
      SPARKY_FITNESS_DB_USER: ${SPARKY_FITNESS_DB_USER}
      SPARKY_FITNESS_DB_HOST: sparkyfitness-db # Use the service name 'sparkyfitness-db' for inter-container communication
      SPARKY_FITNESS_DB_NAME: ${SPARKY_FITNESS_DB_NAME}
      SPARKY_FITNESS_DB_PASSWORD: ${SPARKY_FITNESS_DB_PASSWORD}
      SPARKY_FITNESS_DB_PORT: 5432
      SPARKY_FITNESS_API_ENCRYPTION_KEY: ${SPARKY_FITNESS_API_ENCRYPTION_KEY}
      # Uncomment the line below and comment the line above to use a file-based secret
      # SPARKY_FITNESS_API_ENCRYPTION_KEY_FILE: /run/secrets/sparkyfitness_api_key

      JWT_SECRET: ${JWT_SECRET}
      # Uncomment the line below and comment the line above to use a file-based secret
      # JWT_SECRET_FILE: /run/secrets/sparkyfitness_jwt_secret
      SPARKY_FITNESS_FRONTEND_URL: ${SPARKY_FITNESS_FRONTEND_URL}
      SPARKY_FITNESS_DISABLE_SIGNUP: ${SPARKY_FITNESS_DISABLE_SIGNUP}
      SPARKY_FITNESS_ADMIN_EMAIL: ${SPARKY_FITNESS_ADMIN_EMAIL}  #User with this email can access the admin panel
    networks:
      - sparkyfitness-network # Use the new named network
    restart: always
    depends_on:
      - sparkyfitness-db # Backend depends on the database being available


  sparkyfitness-frontend:
    image: codewithcj/sparkyfitness:latest # Use pre-built image
    ports:
      - "3004:80" # Map host port 8080 to container port 80 (Nginx)
    networks:
      - sparkyfitness-network # Use the new named network
    restart: always
    depends_on:
      - sparkyfitness-server # Frontend depends on the server
  
  # Garmin integration is still work in progress. Enable once table is ready.
  # sparkyfitness-garmin:
  #   image: codewithcj/garmin_microservice:latest
  #   container_name: sparkyfitness-garmin
  #   environment:
  #     GARMIN_MICROSERVICE_URL: http://sparkyfitness-garmin:8000
  #   networks:
  #     - sparkyfitness-network
  #   restart: unless-stopped
  #   volumes:
  #     - ../SparkyFitnessGarmin:/app
  #   depends_on:
  #     - sparkyfitness-db
  #     - sparkyfitness-server

networks:
  sparkyfitness-network:
    driver: bridge
