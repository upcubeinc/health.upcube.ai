version: "3.8"

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 10

  server:
    image: codewithcj/sparkyfitness_server:latest
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPARKY_FITNESS_LOG_LEVEL: ${LOG_LEVEL}
      SPARKY_FITNESS_DB_USER: ${POSTGRES_USER}
      SPARKY_FITNESS_DB_HOST: db
      SPARKY_FITNESS_DB_NAME: ${POSTGRES_DB}
      SPARKY_FITNESS_DB_PASSWORD: ${POSTGRES_PASSWORD}
      SPARKY_FITNESS_DB_PORT: 5432
      SPARKY_FITNESS_SERVER_PORT: 3010
      NODE_ENV: production
      TZ: ${TZ}
      SPARKY_FITNESS_API_ENCRYPTION_KEY: ${SPARKY_FITNESS_API_ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      SPARKY_FITNESS_FRONTEND_URL: ${PUBLIC_URL}
      SPARKY_FITNESS_DISABLE_SIGNUP: ${SPARKY_FITNESS_DISABLE_SIGNUP}

  web:
    image: codewithcj/sparkyfitness:latest
    restart: unless-stopped
    depends_on:
      - server
    ports:
      - "8100:80"

volumes:
  db:

